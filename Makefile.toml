[config]
skip_core_tasks = true
default_to_workspace = false

[env]
CARGO_MAKE_DEFAULT_PROFILE = "x86_64-linux"

[env.x86_64-linux]
IMPLANT_EXT = ""
IMPLANT_TARGET = "x86_64-unknown-linux-gnu"
IMPLANT_RUSTFLAGS = "-C link-arg=-Wl,--verbose -C relocation-model=pic -C link-arg=-T./stardust/scripts/linux.ld -Z fmt-debug=none"
FEATURES = "--features linux"
RUNNER_TARGET = "${IMPLANT_TARGET}"
RUNNER_EXT = ""

[env.i686-linux]
IMPLANT_TARGET = "i686-unknown-linux-gnu"
IMPLANT_EXT = ""
IMPLANT_RUSTFLAGS = "-C link-arg=-Wl,--verbose -C relocation-model=pic -C link-arg=-T./stardust/scripts/linux.ld -Z fmt-debug=none"
FEATURES = "--features linux"
RUNNER_TARGET = "${IMPLANT_TARGET}"
RUNNER_EXT = ""

[env.x86_64-windows]
IMPLANT_EXT = ".exe"
IMPLANT_TARGET = "x86_64-pc-windows-gnu"
IMPLANT_RUSTFLAGS = { script = ["""
RUSTFLAGS="
                  -C link-arg=-Wl,--verbose
                  -C codegen-units=1
                  -C link-arg=-fpack-struct=8
                  -C link-arg=-falign-jumps=1
                  -C link-arg=-w
                  -C link-arg=-Wl,-s,--no-seh,--enable-stdcall-fixup
                  -C link-arg=-Wl,--subsystem,console
                  -C link-arg=-Wl,-T./stardust/scripts/windows.x86_64.ld
                  -C relocation-model=pic
                  -Z fmt-debug=none";
                  #-Z location-detail=none";

echo $RUSTFLAGS
"""] }
FEATURES = "--features windows"
RUNNER_TARGET = "${IMPLANT_TARGET}"
RUNNER_EXT = ".exe"

[env.i686-windows]
EXT = ""
IMPLANT_TARGET = "i686-unknown-none.json"
IMPLANT_RUSTFLAGS = "-C link-arg=-Wl,--verbose -C relocation-model=pic -C link-arg=-T./stardust/scripts/linux.ld -Z fmt-debug=none"
FEATURES = "--features windows"
RUNNER_TARGET = "i686-pc-windows-gnu"
RUNNER_EXT = ".exe"

[tasks.default]
description = "Default task that builds the project."
dependencies = ["build"]

[tasks.build]
description = "Clean, build stardust, build runner."
dependencies = ["clean", "build-stardust", "objcopy", "build-runner"]

[tasks.run]
description = "Run startdust as PIC"
dependencies = ["build"]
command = "./target/${RUNNER_TARGET}/debug/runner${RUNNER_EXT}"

[tasks.build-stardust]
description = "Build stardust."
script = '''
#!/usr/bin/env bash

export RUSTFLAGS=$IMPLANT_RUSTFLAGS
cargo build ${FEATURES} -Zbuild-std=core,alloc -Zbuild-std-features=compiler-builtins-mem --package=stardust --release --target ${IMPLANT_TARGET}
'''

[tasks.build-runner]
description = "Build runner."
command = "cargo"
args = ["build", "--package=runner", "--target", "${RUNNER_TARGET}"]

[tasks.clean]
description = "Cleans the project."
script = ["cargo clean", "rm -f ./target"]

[tasks.objcopy]
description = "Copy .text section of the binary to stardust.bin."
script = '''
#!/usr/bin/env bash

objcopy -O binary -j .text target/${IMPLANT_TARGET%.json}/release/stardust${IMPLANT_EXT} target/stardust.bin

echo "Stardust Size: $(stat --format="%s" target/stardust.bin | numfmt --from=auto --to=iec-i --suffix=B)"
'''

[tasks.objdump]
description = "Dumps stardust to stdout using objdump."
command = "objdump"
args = [
    "-dzrWC",
    "-mi386",
    "-Mx86-64",
    "-Mintel",
    "-j",
    ".text",
    "-z",
    "target/${IMPLANT_TARGET%.json}/release/stardust${IMPLANT_EXT}",
]

[tasks.debug]
description = "Debug stardust pic."
command = "rust-gdb"
args = ["target/${RUNNER_TARGET}/debug/runner${RUNNER_EXT}"]

[tasks.r2-bin]
description = "Analyze stardust bin w/ r2."
command = "r2"
args = ["-AA", "target/stardust.bin"]

[tasks.r2]
description = "Analyze stardust bin w/ r2."
command = "r2"
args = [
    "-e bin.relocs.apply=true",
    "-AA",
    "target/${IMPLANT_TARGET%.json}/release/stardust${IMPLANT_EXT}",
]
